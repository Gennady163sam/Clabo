group 'com.github.ivan_osipov'
def releaseVersion = '0.0.2'
version "$releaseVersion-SNAPSHOT"
def ignoreSigning = true


buildscript {
    ext.kotlin_version = '1.1.3-2'
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.com.dorongold.plugins:task-tree:1.3"
    }
}

apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: "com.dorongold.task-tree"

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile('com.github.kittinunf.fuel:fuel:1.7.0',
            "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
            'com.google.code.gson:gson:2.8.0',
            'org.slf4j:slf4j-api:1.7.25',
            'com.google.guava:guava:22.0')
    testCompile(
            'ch.qos.logback:logback-classic:1.2.3',
            'ch.qos.logback:logback-core:1.2.3'
    )

}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

task fatJar(type: Jar) {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

publishing {
    publications {
        release(MavenPublication) {
            version = releaseVersion
            artifact fatJar
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name "${project.group}:${archivesBaseName}"
                packaging 'jar'
                description 'Kotlin library for the easiest way to develop Telegram bot based on flexible DSL'
                url 'https://clabo.i-osipov.ru'

                scm {
                    connection 'scm:git:git://github.com/ivan-osipov/Clabo.git'
                    developerConnection 'scm:git:ssh://github.com/ivan-osipov/Clabo.git'
                    url 'https://github.com/ivan-osipov/Clabo/tree/master'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'ivan-osipov'
                        name 'Ivan Osipov'
                        email 'i.osipov.develop@gmail.com'
                    }
                }
            }
        }
    }
}

if(!ignoreSigning) {
    signing {
        sign configurations.archives
    }

    javadocJar.dependsOn = [fatJar]
    signArchives.dependsOn = [fatJar]
}

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_6
    targetCompatibility = JavaVersion.VERSION_1_6

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_6
        apiVersion = "1.1"
        languageVersion = "1.1"
    }
}